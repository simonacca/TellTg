#!/usr/bin/env python

import urllib2, json, sys, os, fileinput
import argparse

conf_msg = '''
    Choose one of the following options for the configurations:
    - JSON
      - create a telltg.conf.json file in
        - the same directory as the source code
        - ~/.telltg.conf.json
        - /etc/telltg.conf.json
      - copy and customize this config:
         {"key":"123abc","ids":["1234", "456"]}
    - ENVIRONMENTAL VARIABLE
      - set the following environmental variables
        - TELLTG_BOT_KEY
        - TELLTG_CHAT_IDS (as comma separated values)
    \n\ntelltg can also be used to send messages passed via stdin, for example:
    cat MYFILE.py | telltg
'''

# Argument parsing
parser = argparse.ArgumentParser(description='A command line Telegram message sender',
                                 usage = conf_msg)
parser.add_argument('message',nargs='?', help='The message you want to send')
parser.add_argument('-d', help='Message domain (much like an object field)')
parser.add_argument('-i', nargs='*', help='Send to specific chat_id')
args = parser.parse_args()


# Configuration fetch from files
conf = {}
conf_paths =[os.path.dirname(os.path.realpath(__file__)),
             os.path.expanduser('~') + '.',
             '/etc/']
for path in conf_paths:
    path = os.path.join(path, 'telltg.conf.json')
    if os.path.isfile(path):
        with open(path, 'r') as f:
            conf = json.loads(f.read())
            break

# Configuration fetch from environmental variables
if not conf:
    if not 'TELLTG_BOT_KEY' in os.environ:
        print conf_msg
        sys.exit()
    else:
        conf['key'] = os.environ['TELLTG_BOT_KEY']
        conf['ids'] = os.environ['TELLTG_CHAT_IDS'].split(',')

# Configuration fetch from args
if args.i:
    conf['ids'] = args.i

# Message creation
msg = ''
if args.d:
    msg += 'Domain:{}\n'.format(args.d)

if args.message:
    msg += args.message
else:
    msg += sys.stdin.read()
    if not msg:
        sys.exit()

# Sending
url = 'https://api.telegram.org/bot{}/sendMessage'.format(conf['key'])
for i in conf['ids']:
    payload = json.dumps({'chat_id': i, 'text': msg})
    req = urllib2.Request(url, payload, {'Content-Type': 'application/json'})
    urllib2.urlopen(req)
